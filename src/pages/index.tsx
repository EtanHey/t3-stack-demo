/* eslint-disable @next/next/no-img-element */
import { SignInButton, useUser } from "@clerk/nextjs";
import type { NextPage } from "next";
import Head from "next/head";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import Image from "next/image";
import LoadingPage from "~/components/loadingComps";

dayjs.extend(relativeTime);

const CreateRecipeWizard = () => {
  const { user } = useUser();
  if (!user) return null;
  return (
    <div className="flex grow gap-3">
      <Image
        src={user.imageUrl}
        width={56}
        height={56}
        className="h-14 w-14 select-none rounded-full"
        alt="your user image"
      />
      <input
        type="text"
        placeholder="type some recipe description"
        className="w-full bg-transparent outline-none"
      />
    </div>
  );
};

type RecipeWithUser = RouterOutputs["recipes"]["getAll"][number];

const RecipeView = (props: RecipeWithUser) => {
  const { recipe, author } = props;
  return (
    <div key={recipe.id} className="flex gap-3 border-b border-slate-500 p-4">
      <Image
        src={author.profileImageUrl}
        alt={`${author.username} profile image`}
        width={45}
        height={45}
        className="h-12 w-12 rounded-full"
      />
      <div className="flex flex-col gap-2">
        <div className="flex gap-2 text-slate-300">
          <span>{`@${author.username}`}</span>
          <span>Â·</span>
          <span className="font-thin">{dayjs(recipe.createdAt).fromNow()}</span>
        </div>
        <span>{recipe.description}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: recipesLoading } = api.recipes.getAll.useQuery();
  if (recipesLoading) return <LoadingPage />;
  if (!data) return <div>Something went wrong</div>;
  return (
    <div className="flex flex-col">
      {data?.map((RecipeInfo) => (
        <RecipeView key={RecipeInfo.recipe.id} {...RecipeInfo} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { user, isLoaded: userLoaded, isSignedIn } = useUser();

  api.recipes.getAll.useQuery();
  // return empty div if both aren't  loaded, since user tends to load faster
  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            <h1>
              {!isSignedIn && (
                <div className="flex justify-center">
                  <SignInButton />
                </div>
              )}
            </h1>

            {!!isSignedIn && (
              <div className="flex w-full justify-center">
                <CreateRecipeWizard />
              </div>
            )}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
